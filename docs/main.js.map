{"version":3,"sources":["./src/environments/environment.ts","./src/app/image-data-transfer/image-data-transfer.component.ts","./src/app/image-data-transfer/image-data-transfer.component.html","./src/app/qrcode/qrcode.component.ts","./src/app/qrcode/qrcode.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/event-bus.service.ts","./src/app/core/update.service.ts","./src/app/scan/scan.component.ts","./src/app/scan/scan.component.html","./src/app/core/check-update.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-image-data-transfer',\n  templateUrl: './image-data-transfer.component.html',\n  styleUrls: ['./image-data-transfer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageDataTransferComponent implements OnInit {\n\n  message = '';\n  text = '';\n  startTag = '#tallix-start#';\n  endTag = '#tallix-end#';\n  imgBase64Data = '';\n  images = [];\n  @ViewChild('img', { static: true }) imgCanvas: ElementRef;\n\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    const ele = this.imgCanvas.nativeElement;\n    const ctx = ele.getContext('2d');\n    const img = new Image();\n    img.onload = () => {\n      console.log(img.height, img.width)\n      ele.height = 300;\n      ele.width = 200;\n      ctx.drawImage(img, 0, 0);\n\n\n      // this.imgBase64Data = ele.toDataURL('image/png', 0.1);\n    };\n    img.src = '../../assets/logo.png';\n  }\n\n  messageUpdate(e): void {\n    const ctx = this.imgCanvas.nativeElement.getContext('2d');\n    ctx.font = '20px Arial';\n    ctx.textAlign = 'center';\n    ctx.clearRect(0, 200, 200, 100);\n    ctx.fillText(this.message, this.imgCanvas.nativeElement.width / 2, 230);\n  }\n\n  downloadImage(): void {\n    const link = document.createElement('a');\n\n    link.download = 'test.png';\n    link.style.display = 'none';\n\n    const base = `data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAASwAAACWCAYAAABkW7XSAAAEa0lEQVR4Xu3UwQkAMAwDsWb/odNnV+iBMoGRg2d3d2bmOAIECHwuYKg+L0g8AgSegMHyDQQIZAQMVqYqQQkQMFh+gACBjIDBylQlKAECBssPECCQETBYmaoEJUDAYPkBAgQyAgYrU5WgBAgYLD9AgEBGwGBlqhKUAAGD5QcIEMgIGKxMVYISIGCw/AABAhkBg5WpSlACBAyWHyBAICNgsDJVCUqAgMHyAwQIZAQMVqYqQQkQMFh+gACBjIDBylQlKAECBssPECCQETBYmaoEJUDAYPkBAgQyAgYrU5WgBAgYLD9AgEBGwGBlqhKUAAGD5QcIEMgIGKxMVYISIGCw/AABAhkBg5WpSlACBAyWHyBAICNgsDJVCUqAgMHyAwQIZAQMVqYqQQkQMFh+gACBjIDBylQlKAECBssPECCQETBYmaoEJUDAYPkBAgQyAgYrU5WgBAgYLD9AgEBGwGBlqhKUAAGD5QcIEMgIGKxMVYISIGCw/AABAhkBg5WpSlACBAyWHyBAICNgsDJVCUqAgMHyAwQIZAQMVqYqQQkQMFh+gACBjIDBylQlKAECBssPECCQETBYmaoEJUDAYPkBAgQyAgYrU5WgBAgYLD9AgEBGwGBlqhKUAAGD5QcIEMgIGKxMVYISIGCw/AABAhkBg5WpSlACBAyWHyBAICNgsDJVCUqAgMHyAwQIZAQMVqYqQQkQMFh+gACBjIDBylQlKAECBssPECCQETBYmaoEJUDAYPkBAgQyAgYrU5WgBAgYLD9AgEBGwGBlqhKUAAGD5QcIEMgIGKxMVYISIGCw/AABAhkBg5WpSlACBAyWHyBAICNgsDJVCUqAgMHyAwQIZAQMVqYqQQkQMFh+gACBjIDBylQlKAECBssPECCQETBYmaoEJUDAYPkBAgQyAgYrU5WgBAgYLD9AgEBGwGBlqhKUAAGD5QcIEMgIGKxMVYISIGCw/AABAhkBg5WpSlACBAyWHyBAICNgsDJVCUqAgMHyAwQIZAQMVqYqQQkQMFh+gACBjIDBylQlKAECBssPECCQETBYmaoEJUDAYPkBAgQyAgYrU5WgBAgYLD9AgEBGwGBlqhKUAAGD5QcIEMgIGKxMVYISIGCw/AABAhkBg5WpSlACBAyWHyBAICNgsDJVCUqAgMHyAwQIZAQMVqYqQQkQMFh+gACBjIDBylQlKAECBssPECCQETBYmaoEJUDAYPkBAgQyAgYrU5WgBAgYLD9AgEBGwGBlqhKUAAGD5QcIEMgIGKxMVYISIGCw/AABAhkBg5WpSlACBAyWHyBAICNgsDJVCUqAgMHyAwQIZAQMVqYqQQkQMFh+gACBjIDBylQlKAECBssPECCQETBYmaoEJUDAYPkBAgQyAgYrU5WgBAgYLD9AgEBGwGBlqhKUAAGD5QcIEMgIGKxMVYISIGCw/AABAhkBg5WpSlACBAyWHyBAICNgsDJVCUqAgMHyAwQIZAQMVqYqQQkQMFh+gACBjIDBylQlKAECF8kSBJeDsCYeAAAAAElFTkSuQmCC`;\n    this.imgBase64Data = this.imgCanvas.nativeElement.toDataURL('image/png', 0.1);\n    const data = {\n      message: this.message,\n      images: [\n        base,\n        base,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n        this.imgBase64Data,\n      ]\n    };\n\n    const base64 = window.atob(this.imgBase64Data.split('data:image/png;base64,')[1]);\n\n    const info = window.btoa(base64 + this.startTag + JSON.stringify(data) + this.endTag);\n    link.href = `data:image/png;base64,${info}`;\n\n    document.body.appendChild(link);\n    link.click();\n\n    document.body.removeChild(link);\n  }\n\n  uploadFile(event): void {\n    console.log(event);\n    const file = event.target.files[0];\n\n    const reader = new FileReader();\n\n    reader.readAsText(file);\n\n    reader.addEventListener(\n      'load',\n      () => {\n        console.log(reader.result);\n        const result = reader.result as string;\n        const data = result.split(this.startTag)[1];\n        if (data.indexOf(this.endTag) === -1) {\n          alert('data not correct');\n\n          return;\n        }\n        console.log(data.split(this.endTag));\n        const r = data.split(this.endTag)[0];\n        const _ = JSON.parse(r);\n        console.error('message is: ', _);\n\n        this.text = `what you input is : ${_.message}`;\n        this.images = _.images;\n\n        console.log(this.images)\n        this.cdr.markForCheck();\n      },\n      false\n    );\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n}\n","<div class=\"container\">\n  <canvas class=\"canvas\" #img></canvas>\n  <div class=\"data-input\">\n    <label>input Message:\n      <input [(ngModel)]=\"message\" (change)=\"messageUpdate($event)\" type=\"text\" />\n    </label>\n    <br />\n    <button (click)=\"downloadImage()\">DownLoad</button>\n    <!-- <button id=\"download-file\">File Download</button> -->\n  </div>\n\n  <input\n    (change)=\"uploadFile($event)\"\n    type=\"file\"\n    accept=\"image/x-png,image/jpeg,image/gif\"\n  />\n\n  {{ text }}\n\n  <img *ngFor=\"let _ of images\" src=\"{{ _ }}\" alt=\"\" />\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-qrcode',\n  templateUrl: './qrcode.component.html',\n  styleUrls: ['./qrcode.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QrcodeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <a routerLink=\"/scan\" routerLinkActive=\"active\">\n    <button>Scan QR Code</button>\n  </a>\n\n  <a routerLink=\"/generateQRcode\" routerLinkActive=\"active\">\n    <button>generate QR Code</button>\n  </a>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <header class=\"header\">\n    <img class=\"header-image\" src=\"../../assets/base.png\" alt=\"pwa\" />\n  </header>\n  <div class=\"content\">\n    <div class=\"item\">\n      <a routerLink=\"/imageDataTransfer\" routerLinkActive=\"active\">\n        <button>Image Data Transfer</button>\n      </a>\n    </div>\n    <div class=\"item\">\n      <a routerLink=\"/qrcode\" routerLinkActive=\"active\">\n        <button>QR Code</button>\n      </a>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CheckForUpdateService } from './core/check-update.service';\nimport { UpdateService } from './core/update.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n\n  constructor(private update: UpdateService, private checkUpdate: CheckForUpdateService) { }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ImageDataTransferComponent } from './image-data-transfer/image-data-transfer.component';\nimport { QrcodeComponent } from './qrcode/qrcode.component';\nimport { ScanComponent } from './scan/scan.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    ImageDataTransferComponent,\n    QrcodeComponent,\n    ScanComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      registrationStrategy: 'registerImmediately',\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class EventBusService {\n    private IDBOpended = new BehaviorSubject(false);\n    // tslint:disable-next-line:member-ordering\n    public IDBOpended$ = this.IDBOpended.asObservable();\n\n    private checkingForUpdate = new BehaviorSubject(false);\n    // tslint:disable-next-line:member-ordering\n    public checkingForUpdate$ = this.checkingForUpdate.asObservable();\n\n    private newVersion = new Subject();\n    // tslint:disable-next-line:member-ordering\n    public newVersion$ = this.newVersion.asObservable();\n\n    public idbOpened(): void {\n        this.IDBOpended.next(true);\n    }\n\n    public idbClosed(): void {\n        this.IDBOpended.next(false);\n    }\n\n    public checkForUpdate(): void {\n        this.checkingForUpdate.next(true);\n    }\n\n    public findNewVersion(): void {\n        this.newVersion.next();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SwUpdate, UpdateActivatedEvent, UpdateAvailableEvent } from '@angular/service-worker';\nimport { from, Observable } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { EventBusService } from './event-bus.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UpdateService {\n    constructor(public updates: SwUpdate, private eventBus: EventBusService) {\n        this.listenForUpdate().subscribe();\n        updates.activated.subscribe((event: UpdateActivatedEvent): void => {\n            console.log('old version was', event.previous);\n            console.log('new version is', event.current);\n        });\n    }\n\n    public listenForUpdate(): Observable<any> {\n        return this.updates.available.pipe(\n            filter((event: UpdateAvailableEvent): boolean => Boolean(event.available)),\n            switchMap(\n                (event: UpdateAvailableEvent): Observable<any> => {\n                    console.log('current version is', event.current);\n                    console.log('available version is', event.available);\n\n                    return from(\n                        caches.keys().then(\n                            (keyList: string[]): Promise<any> => {\n                                return Promise.all(\n                                    keyList.map(\n                                        (key: string): Promise<any> => {\n                                            if (key.indexOf(event.available.hash) === -1) {\n                                                console.warn('[ServiceWorker] Removing old cache ===> ', key);\n\n                                                return caches.delete(key);\n                                            }\n                                        }\n                                    )\n                                );\n                            }\n                        )\n                    );\n                }\n            ),\n            tap((): void => {\n                this.eventBus.findNewVersion();\n            })\n        );\n    }\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport jsQR from 'jsqr';\n\n@Component({\n  selector: 'app-scan',\n  templateUrl: './scan.component.html',\n  styleUrls: ['./scan.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScanComponent implements OnInit, AfterViewInit {\n  canvas: any;\n  video: any;\n  canvasElement: any;\n\n  constructor() { }\n\n  ngAfterViewInit(): void {\n\n  }\n\n  ngOnInit(): void {\n    this.video = document.createElement('video');\n    this.canvasElement = document.getElementById('canvas') as HTMLCanvasElement;\n    this.canvas = this.canvasElement.getContext('2d');\n    const _ = this;\n\n    // Use facingMode: environment to attemt to get the front camera on phones\n    navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } }).then((stream) => {\n      _.video.srcObject = stream;\n      _.video.setAttribute('playsinline', true); // required to tell iOS safari we don't want fullscreen\n      _.video.play();\n      setInterval(() => {\n        _.tick();\n      }, 100);\n    });\n  }\n\n  tick(): void {\n    if (!this || !this.video) { return; }\n    const loadingMessage = document.getElementById('loadingMessage');\n    const outputContainer = document.getElementById('output');\n    const outputMessage = document.getElementById('outputMessage');\n    const outputData = document.getElementById('outputData');\n\n    loadingMessage.innerText = '⌛ Loading video...';\n    if (this.video.readyState === this.video.HAVE_ENOUGH_DATA) {\n      loadingMessage.hidden = true;\n      this.canvasElement.hidden = false;\n      outputContainer.hidden = false;\n\n      this.canvasElement.height = this.video.videoHeight;\n      this.canvasElement.width = this.video.videoWidth;\n      this.canvas.drawImage(this.video, 0, 0, this.canvasElement.width, this.canvasElement.height);\n      const imageData = this.canvas.getImageData(0, 0, this.canvasElement.width, this.canvasElement.height);\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: 'dontInvert',\n      });\n      if (code) {\n        this.drawLine(code.location.topLeftCorner, code.location.topRightCorner, '#FF3B58');\n        this.drawLine(code.location.topRightCorner, code.location.bottomRightCorner, '#FF3B58');\n        this.drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, '#FF3B58');\n        this.drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, '#FF3B58');\n        outputMessage.hidden = true;\n        outputData.parentElement.hidden = false;\n        outputData.innerText = code.data;\n      } else {\n        outputMessage.hidden = false;\n        outputData.parentElement.hidden = true;\n      }\n    }\n    requestAnimationFrame(this.tick);\n  }\n\n  drawLine(begin, end, color): void {\n    this.canvas.beginPath();\n    this.canvas.moveTo(begin.x, begin.y);\n    this.canvas.lineTo(end.x, end.y);\n    this.canvas.lineWidth = 4;\n    this.canvas.strokeStyle = color;\n    this.canvas.stroke();\n  }\n\n}\n","<div>\n  <h1>Scan Demo</h1>\n  <div id=\"loadingMessage\">\n    🎥 Unable to access video stream (please make sure you have a webcam\n    enabled)\n  </div>\n  <canvas id=\"canvas\" hidden></canvas>\n  <div id=\"output\" hidden>\n    <div id=\"outputMessage\">No QR code detected.</div>\n    <div hidden><b>Data:</b> <span id=\"outputData\"></span></div>\n  </div>\n</div>\n","import { ApplicationRef, Injectable } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { concat, from, interval, Observable } from 'rxjs';\nimport { first, switchMap, tap } from 'rxjs/operators';\nimport { EventBusService } from './event-bus.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CheckForUpdateService {\n    constructor(appRef: ApplicationRef, updates: SwUpdate, private eventBus: EventBusService) {\n        const appIsStable$: Observable<boolean> = appRef.isStable.pipe(first((isStable: boolean): boolean => isStable));\n        // tslint:disable-next-line:no-magic-numbers\n        const everySixHours$: Observable<number> = interval(1000 * 60 * 60 * 6);\n        const everySixHoursOnceAppIsStable$: Observable<any> = concat(appIsStable$, everySixHours$);\n\n        everySixHoursOnceAppIsStable$\n            .pipe(\n                tap((): void => {\n                    this.eventBus.checkForUpdate();\n                }),\n                switchMap((): Observable<any> => from(updates.checkForUpdate()))\n            )\n            .subscribe();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ImageDataTransferComponent } from './image-data-transfer/image-data-transfer.component';\nimport { QrcodeComponent } from './qrcode/qrcode.component';\nimport { ScanComponent } from './scan/scan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  },\n  {\n    path: 'imageDataTransfer',\n    component: ImageDataTransferComponent\n  },\n  {\n    path: 'qrcode',\n    component: QrcodeComponent\n  },\n  {\n    path: 'scan',\n    component: ScanComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}